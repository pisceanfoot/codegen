#region Notice
/***************************************************
文件名：        ${class.Name.ToLower()}.cs
Copyright  (c)  2006-2008 上海中最信息研发部
编写人：        Code Generation
创建时间：        $now
改写者：        
改写日期：        
修改历史：
***************************************************/
#endregion

#region using
using System;
using System.Collections.Generic;
#endregion
        
namespace ${namespace}.IDAL
{
    /// <summary>
    /// 定义 I$class.PascalCaseName 接口
    /// </summary>
    public interface I$class.PascalCaseName
    {
        #region 成员方法
#set($index = 0)
#foreach($column in $class.Columns)
#if ($column.IsPrimaryKey)
#if ($index == 0)
        /// <summary>
        /// 根据编号获取 ${class.PascalCaseName} 集合
        /// </summary>
        bool Exists($column.LanguageType $column.CamelCaseName);

#set($index = $index + 1)
#end
#end
#end
        /// <summary>
        /// 是否存在该记录
        /// </summary>
        bool Exists(${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
#if ($class.Type == "table")

        /// <summary>
        /// 增加一条数据
        /// </summary>
        bool Add(${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
#if($class.PK)

        /// <summary>
        /// 更新一条数据
        /// </summary>
        bool Update(${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
#end
#foreach($column in $class.Columns)
#if ($column.IsPrimaryKey)

        /// <summary>
        /// 删除一条数
        /// </summary>
        bool Delete($column.LanguageType $column.CamelCaseName);
#end
#end
#end
## end table

        /// <summary>
        /// 获取 ${class.PascalCaseName} 集合
        /// </summary>
        List<${namespace}.Model.${class.PascalCaseName}> GetItems();
        
        /// <summary>
        /// 获取 ${class.PascalCaseName} 集合
        /// </summary>
        List<${namespace}.Model.${class.PascalCaseName}> GetItems(string selectColumn);

        /// <summary>
        /// 根据条件获取 ${class.PascalCaseName} 集合
        /// </summary>
        List<${namespace}.Model.${class.PascalCaseName}> GetItemListByCondition(${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
        
        /// <summary>
        /// 根据条件获取 ${class.PascalCaseName} 集合
        /// </summary>
        List<${namespace}.Model.${class.PascalCaseName}> GetItemListByCondition(string selectColumn, ${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
      
#set($index = 0)
#foreach($column in $class.Columns)
#if ($column.IsPrimaryKey)
#if ($index == 0)
        /// <summary>
        /// 根据编号获取 ${class.PascalCaseName} 集合
        /// </summary>
        ${namespace}.Model.${class.PascalCaseName} GetItemById($column.LanguageType $column.CamelCaseName);
        
        /// <summary>
        /// 根据编号获取 ${class.PascalCaseName} 集合
        /// </summary>
        ${namespace}.Model.${class.PascalCaseName} GetItemById(string selectColumn, $column.LanguageType $column.CamelCaseName);
#set($index = $index + 1)
#end
#end
#end

        /// <summary>
        /// 根据编号获取 ${class.PascalCaseName} 集合
        /// </summary>
        ${namespace}.Model.${class.PascalCaseName} GetItemByCondition(${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
        
        /// <summary>
        /// 根据编号获取 ${class.PascalCaseName} 集合
        /// </summary>
        ${namespace}.Model.${class.PascalCaseName} GetItemByCondition(string selectColumn, ${namespace}.Model.${class.PascalCaseName} $class.CamelCaseName);
        #endregion
    }
}